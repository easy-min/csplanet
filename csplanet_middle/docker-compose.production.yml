version: "3.9"

volumes:
  csplanet_prod_postgres_data: {}
  csplanet_prod_redis_data: {}
  csplanet_prod_media: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: csplanet_prod_django
    container_name: csplanet_prod_django
    ports:
      - "8000:8000"
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - csplanet_prod_media:/app/csplanet/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.env
      - ./.envs/.production/.postgres

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: csplanet_prod_postgres
    container_name: csplanet_prod_postgres
    volumes:
      - csplanet_prod_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:6
    container_name: csplanet_prod_redis
    volumes:
      - csplanet_prod_redis_data:/data

  celeryworker:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: csplanet_prod_celeryworker
    container_name: csplanet_prod_celeryworker
    command: /start-celeryworker
    volumes:
      - csplanet_prod_media:/app/csplanet/media
    depends_on:
      - django
      - redis
      - postgres
    env_file:
      - ./.envs/.production/.env
      - ./.envs/.production/.postgres

  celerybeat:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: csplanet_prod_celerybeat
    container_name: csplanet_prod_celerybeat
    command: /start-celerybeat
    volumes:
      - csplanet_prod_media:/app/csplanet/media
    depends_on:
      - django
      - redis
      - postgres
    env_file:
      - ./.envs/.production/.env
      - ./.envs/.production/.postgres
