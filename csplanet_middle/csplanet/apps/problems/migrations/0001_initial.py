# Generated by Django 5.1.8 on 2025-04-24 07:23

import csplanet.apps.problems.models.chapter
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='단원 이름')),
                ('order', models.IntegerField(default=0, verbose_name='순서')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectiveKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100, unique=True, verbose_name='대표 키워드')),
                ('synonyms', models.JSONField(blank=True, default=list, verbose_name='동의어 목록')),
            ],
            options={
                'verbose_name': '주관식 키워드',
                'verbose_name_plural': '주관식 키워드들',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='주제 이름')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('MCQ', '객관식'), ('SA', '주관식')], help_text='객관식(MCQ) 또는 주관식(SA)을 선택하세요.', max_length=3, verbose_name='문제 유형')),
                ('content', models.TextField(help_text='문제 내용을 입력하세요.', verbose_name='문제 내용')),
                ('explanation', models.TextField(blank=True, help_text='정답 해설을 입력하세요 (선택사항).', verbose_name='해설')),
                ('score', models.PositiveIntegerField(blank=True, help_text='이 문제의 배점을 입력하세요.', null=True, verbose_name='배점')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('chapter', models.ForeignKey(help_text='이 문제가 속한 단원을 선택하세요.', on_delete=django.db.models.deletion.CASCADE, to='problems.chapter', verbose_name='단원')),
                ('creator', models.ForeignKey(help_text='문제를 작성한 사용자입니다.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
            ],
            options={
                'verbose_name': '객관식 문제',
                'verbose_name_plural': '객관식 문제들',
            },
        ),
        migrations.CreateModel(
            name='ObjectiveChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200, verbose_name='보기 내용')),
                ('is_correct', models.BooleanField(default=False, verbose_name='정답 여부')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='problems.objectiveproblem', verbose_name='문제')),
            ],
            options={
                'verbose_name': '객관식 보기',
                'verbose_name_plural': '객관식 보기들',
            },
        ),
        migrations.CreateModel(
            name='QuestionKeywordMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.PositiveSmallIntegerField(default=1, help_text='채점 시 가중치로 사용', verbose_name='중요도')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problems.subjectivekeyword', verbose_name='키워드')),
            ],
            options={
                'verbose_name': '문제-키워드 매핑',
                'verbose_name_plural': '문제-키워드 매핑들',
            },
        ),
        migrations.CreateModel(
            name='SubjectiveProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('MCQ', '객관식'), ('SA', '주관식')], help_text='객관식(MCQ) 또는 주관식(SA)을 선택하세요.', max_length=3, verbose_name='문제 유형')),
                ('content', models.TextField(help_text='문제 내용을 입력하세요.', verbose_name='문제 내용')),
                ('explanation', models.TextField(blank=True, help_text='정답 해설을 입력하세요 (선택사항).', verbose_name='해설')),
                ('score', models.PositiveIntegerField(blank=True, help_text='이 문제의 배점을 입력하세요.', null=True, verbose_name='배점')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('chapter', models.ForeignKey(help_text='이 문제가 속한 단원을 선택하세요.', on_delete=django.db.models.deletion.CASCADE, to='problems.chapter', verbose_name='단원')),
                ('creator', models.ForeignKey(help_text='문제를 작성한 사용자입니다.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('subjective_keywords', models.ManyToManyField(related_name='subjective_questions', through='problems.QuestionKeywordMapping', to='problems.subjectivekeyword', verbose_name='채점용 키워드')),
            ],
            options={
                'verbose_name': '주관식 문제',
                'verbose_name_plural': '주관식 문제들',
            },
        ),
        migrations.AddField(
            model_name='questionkeywordmapping',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problems.subjectiveproblem', verbose_name='문제'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='topic',
            field=models.ForeignKey(default=csplanet.apps.problems.models.chapter.get_default_topic, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='problems.topic', verbose_name='주제'),
        ),
        migrations.AlterUniqueTogether(
            name='questionkeywordmapping',
            unique_together={('question', 'keyword')},
        ),
    ]
